<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mixnet on Nym Docs</title>
    <link>https://nymtech.net/docs/mixnet/</link>
    <description>Recent content in Mixnet on Nym Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://nymtech.net/docs/mixnet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installation</title>
      <link>https://nymtech.net/docs/mixnet/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://nymtech.net/docs/mixnet/installation/</guid>
      <description>The mixnet code is relatively simple to build and run on Mac OS X and Linux. We haven&amp;rsquo;t tried it on Windows (yet).
Requirements  Go 1.12 or later make git  To download and build:
git clone https://github.com/nymtech/nym-mixnet.git cd nym-mixnet git checkout v0.1.5 make  In case you&amp;rsquo;ve been traumatized by Go&amp;rsquo;s (lack of) dependency management in the past, you don&amp;rsquo;t need to worry about $GOPATH, $GOROOT etc. Check the code out and build it wherever you want to.</description>
    </item>
    
    <item>
      <title>Mixnet client</title>
      <link>https://nymtech.net/docs/mixnet/clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://nymtech.net/docs/mixnet/clients/</guid>
      <description>Clients The Nym Client was built in the Installation section. If you haven&amp;rsquo;t yet built the Nym Mixnet and want to run the code on this page, go there first.
 From inside the nym-mixnet directory, the loopix-client binary got built to the build directory, so you can run it with ./build/loopix-client:
nym-mixnet$ ./build/loopix-client Usage: loopix-client COMMAND [OPTIONS] _ _ | | ___ ___ _ __ (_)_ __ | | / _ \ / _ \| &#39;_ \| \ \/ / | |___ (_) | (_) | |_) | |&amp;gt; &amp;lt; |_____\___/ \___/| .</description>
    </item>
    
    <item>
      <title>Mixnodes</title>
      <link>https://nymtech.net/docs/mixnet/mixnodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://nymtech.net/docs/mixnet/mixnodes/</guid>
      <description>Mixnodes The Nym Mixnodes were built in the Installation section. If you haven&amp;rsquo;t yet built the Nym Mixnet and want to run the code, go there first.
 You can run the Mix Node from the nym-mixnet directory like this:
./build/loopix-mixnode Usage: loopix-mixnode COMMAND [OPTIONS] _ _ | | ___ ___ _ __ (_)_ __ | | / _ \ / _ \| &#39;_ \| \ \/ / | |___ (_) | (_) | |_) | |&amp;gt; &amp;lt; |_____\___/ \___/| .</description>
    </item>
    
    <item>
      <title>Storage Nodes</title>
      <link>https://nymtech.net/docs/mixnet/storage-nodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://nymtech.net/docs/mixnet/storage-nodes/</guid>
      <description>Storage nodes The Nym Storage Nodes were built in the Installation section. If you haven&amp;rsquo;t yet built the Nym Mixnet and want to run the code, go there first.
 You can run the Storage node from the nym-mixnet directory like this:
./build/loopix-provider Usage: loopix-provider COMMAND [OPTIONS] _ _ | | ___ ___ _ __ (_)_ __ | | / _ \ / _ \| &#39;_ \| \ \/ / | |___ (_) | (_) | |_) | |&amp;gt; &amp;lt; |_____\___/ \___/| .</description>
    </item>
    
    <item>
      <title>Chat demo</title>
      <link>https://nymtech.net/docs/mixnet/chat-demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://nymtech.net/docs/mixnet/chat-demo/</guid>
      <description>You can try out our running mixnet today using a demo application - a mixnet chat demonstrator.
The chat client runs as both a console-based client, and as an Electron client showing how you&amp;rsquo;d build something in JavaScript.
If you want to try it, grab the code from the chat demo Github repo - build and usage instructions are there. Here&amp;rsquo;s a quick GIF of the console client in action:</description>
    </item>
    
  </channel>
</rss>